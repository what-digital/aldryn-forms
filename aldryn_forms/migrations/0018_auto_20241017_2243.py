# Generated by Django 3.2.25 on 2024-10-17 22:43

import aldryn_forms.sizefield.models
from django.db import migrations, models
import django.db.models.deletion
import djangocms_attributes_field.fields
import filer.fields.folder
import parler.fields
import parler.models


class Migration(migrations.Migration):

    dependencies = [
        ('filer', '0017_image__transparent'),
        ('cms', '0022_auto_20180620_1551'),
        ('aldryn_forms', '0017_auto_20231113_1824'),
    ]

    operations = [
        migrations.AlterField(
            model_name='emailfieldplugin',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='aldryn_forms_emailfieldplugin', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='fieldplugin',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='aldryn_forms_fieldplugin', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='fieldsetplugin',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='aldryn_forms_fieldsetplugin', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='fileuploadfieldplugin',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='aldryn_forms_fileuploadfieldplugin', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='formbuttonplugin',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='aldryn_forms_formbuttonplugin', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='formplugin',
            name='action_backend',
            field=models.CharField(choices=[('email_only', 'Email only'), ('none', 'None'), ('default', 'Default')], default='default', max_length=15, verbose_name='Action backend'),
        ),
        migrations.AlterField(
            model_name='formplugin',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='aldryn_forms_formplugin', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='formsubmission',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='imageuploadfieldplugin',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='aldryn_forms_imageuploadfieldplugin', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.AlterField(
            model_name='option',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='textareafieldplugin',
            name='cmsplugin_ptr',
            field=models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, related_name='aldryn_forms_textareafieldplugin', serialize=False, to='cms.cmsplugin'),
        ),
        migrations.CreateModel(
            name='TextAreaFieldPluginTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name_new', models.CharField(blank=True, help_text='Used to set the field name', max_length=255, verbose_name='Name')),
                ('label_new', models.CharField(blank=True, max_length=255, verbose_name='Label')),
                ('required_new', models.BooleanField(default=False, verbose_name='Field is required')),
                ('required_message_new', models.TextField(blank=True, help_text='Error message displayed if the required field is left empty. Default: "This field is required".', null=True, verbose_name='Field required error message')),
                ('placeholder_text_new', models.CharField(blank=True, help_text='Default text in a form. Disappears when user starts typing. Example: "email@example.com"', max_length=255, verbose_name='Placeholder text')),
                ('help_text_new', models.TextField(blank=True, help_text='Explanatory text displayed next to input field. Just like this one.', null=True, verbose_name='Help text')),
                ('attributes_new', djangocms_attributes_field.fields.AttributesField(blank=True, default=dict, verbose_name='Attributes')),
                ('min_value_new', models.PositiveIntegerField(blank=True, null=True, verbose_name='Min value')),
                ('max_value_new', models.PositiveIntegerField(blank=True, null=True, verbose_name='Max value')),
                ('initial_value_new', models.CharField(blank=True, help_text='Default value of field.', max_length=255, verbose_name='Initial value')),
                ('custom_classes_new', models.CharField(blank=True, max_length=255, verbose_name='custom css classes')),
                ('text_area_columns_new', models.PositiveIntegerField(blank=True, null=True, verbose_name='columns')),
                ('text_area_rows_new', models.PositiveIntegerField(blank=True, null=True, verbose_name='rows')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='aldryn_forms.textareafieldplugin')),
            ],
            options={
                'verbose_name': 'text area field plugin Translation',
                'db_table': 'aldryn_forms_textareafieldplugin_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatableModel, models.Model),
        ),
        migrations.CreateModel(
            name='ImageUploadFieldPluginTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name_new', models.CharField(blank=True, help_text='Used to set the field name', max_length=255, verbose_name='Name')),
                ('label_new', models.CharField(blank=True, max_length=255, verbose_name='Label')),
                ('required_new', models.BooleanField(default=False, verbose_name='Field is required')),
                ('required_message_new', models.TextField(blank=True, help_text='Error message displayed if the required field is left empty. Default: "This field is required".', null=True, verbose_name='Field required error message')),
                ('placeholder_text_new', models.CharField(blank=True, help_text='Default text in a form. Disappears when user starts typing. Example: "email@example.com"', max_length=255, verbose_name='Placeholder text')),
                ('help_text_new', models.TextField(blank=True, help_text='Explanatory text displayed next to input field. Just like this one.', null=True, verbose_name='Help text')),
                ('attributes_new', djangocms_attributes_field.fields.AttributesField(blank=True, default=dict, verbose_name='Attributes')),
                ('min_value_new', models.PositiveIntegerField(blank=True, null=True, verbose_name='Min value')),
                ('max_value_new', models.PositiveIntegerField(blank=True, null=True, verbose_name='Max value')),
                ('initial_value_new', models.CharField(blank=True, help_text='Default value of field.', max_length=255, verbose_name='Initial value')),
                ('custom_classes_new', models.CharField(blank=True, max_length=255, verbose_name='custom css classes')),
                ('max_size_new', aldryn_forms.sizefield.models.FileSizeField(blank=True, help_text='The maximum file size of the upload, in bytes. You can use common size suffixes (kB, MB, GB, ...).', null=True, verbose_name='Maximum file size')),
                ('allowed_extensions_new', models.CharField(blank=True, default='', help_text='Comma-separated list of file extensions allowed for this file field. Leave it empty to allow any extension.', max_length=255, verbose_name='Allowed extensions')),
                ('invalid_extension_message_new', models.TextField(blank=True, help_text='Error message displayed if extensions are constrained and the uploaded file fails that validation.Default: "File extension [extension] is not allowed for this field."', null=True, verbose_name='Invalid extension error message')),
                ('store_to_filer_new', models.BooleanField(default=True, help_text='Whether to store this file to filer. If this is unchecked and this file is not attached to any email notification, the file will be lost forever and using it as a template variable in any email template will return empty result.', verbose_name='Store this file to filer')),
                ('max_width_new', models.PositiveIntegerField(blank=True, help_text='The maximum width of the uploaded image, in pixels.', null=True, verbose_name='Maximum image width')),
                ('max_height_new', models.PositiveIntegerField(blank=True, help_text='The maximum height of the uploaded image, in pixels.', null=True, verbose_name='Maximum image height')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='aldryn_forms.imageuploadfieldplugin')),
                ('upload_to_new', filer.fields.folder.FilerFolderField(help_text='Select a folder to which all files submitted through this field will be uploaded to.', on_delete=django.db.models.deletion.CASCADE, to='filer.folder', verbose_name='Upload files to')),
            ],
            options={
                'verbose_name': 'image upload field plugin Translation',
                'db_table': 'aldryn_forms_imageuploadfieldplugin_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatableModel, models.Model),
        ),
        migrations.CreateModel(
            name='FormButtonPluginTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('label_new', models.CharField(max_length=255, verbose_name='Label')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='aldryn_forms.formbuttonplugin')),
            ],
            options={
                'verbose_name': 'form button plugin Translation',
                'db_table': 'aldryn_forms_formbuttonplugin_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatableModel, models.Model),
        ),
        migrations.CreateModel(
            name='FileUploadFieldPluginTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name_new', models.CharField(blank=True, help_text='Used to set the field name', max_length=255, verbose_name='Name')),
                ('label_new', models.CharField(blank=True, max_length=255, verbose_name='Label')),
                ('required_new', models.BooleanField(default=False, verbose_name='Field is required')),
                ('required_message_new', models.TextField(blank=True, help_text='Error message displayed if the required field is left empty. Default: "This field is required".', null=True, verbose_name='Field required error message')),
                ('placeholder_text_new', models.CharField(blank=True, help_text='Default text in a form. Disappears when user starts typing. Example: "email@example.com"', max_length=255, verbose_name='Placeholder text')),
                ('help_text_new', models.TextField(blank=True, help_text='Explanatory text displayed next to input field. Just like this one.', null=True, verbose_name='Help text')),
                ('attributes_new', djangocms_attributes_field.fields.AttributesField(blank=True, default=dict, verbose_name='Attributes')),
                ('min_value_new', models.PositiveIntegerField(blank=True, null=True, verbose_name='Min value')),
                ('max_value_new', models.PositiveIntegerField(blank=True, null=True, verbose_name='Max value')),
                ('initial_value_new', models.CharField(blank=True, help_text='Default value of field.', max_length=255, verbose_name='Initial value')),
                ('custom_classes_new', models.CharField(blank=True, max_length=255, verbose_name='custom css classes')),
                ('max_size_new', aldryn_forms.sizefield.models.FileSizeField(blank=True, help_text='The maximum file size of the upload, in bytes. You can use common size suffixes (kB, MB, GB, ...).', null=True, verbose_name='Maximum file size')),
                ('allowed_extensions_new', models.CharField(blank=True, default='', help_text='Comma-separated list of file extensions allowed for this file field. Leave it empty to allow any extension.', max_length=255, verbose_name='Allowed extensions')),
                ('invalid_extension_message_new', models.TextField(blank=True, help_text='Error message displayed if extensions are constrained and the uploaded file fails that validation.Default: "File extension [extension] is not allowed for this field."', null=True, verbose_name='Invalid extension error message')),
                ('store_to_filer_new', models.BooleanField(default=True, help_text='Whether to store this file to filer. If this is unchecked and this file is not attached to any email notification, the file will be lost forever and using it as a template variable in any email template will return empty result.', verbose_name='Store this file to filer')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='aldryn_forms.fileuploadfieldplugin')),
                ('upload_to_new', filer.fields.folder.FilerFolderField(help_text='Select a folder to which all files submitted through this field will be uploaded to.', on_delete=django.db.models.deletion.CASCADE, to='filer.folder', verbose_name='Upload files to')),
            ],
            options={
                'verbose_name': 'file upload field plugin Translation',
                'db_table': 'aldryn_forms_fileuploadfieldplugin_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatableModel, models.Model),
        ),
        migrations.CreateModel(
            name='FieldPluginTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name_new', models.CharField(blank=True, help_text='Used to set the field name', max_length=255, verbose_name='Name')),
                ('label_new', models.CharField(blank=True, max_length=255, verbose_name='Label')),
                ('required_new', models.BooleanField(default=False, verbose_name='Field is required')),
                ('required_message_new', models.TextField(blank=True, help_text='Error message displayed if the required field is left empty. Default: "This field is required".', null=True, verbose_name='Field required error message')),
                ('placeholder_text_new', models.CharField(blank=True, help_text='Default text in a form. Disappears when user starts typing. Example: "email@example.com"', max_length=255, verbose_name='Placeholder text')),
                ('help_text_new', models.TextField(blank=True, help_text='Explanatory text displayed next to input field. Just like this one.', null=True, verbose_name='Help text')),
                ('attributes_new', djangocms_attributes_field.fields.AttributesField(blank=True, default=dict, verbose_name='Attributes')),
                ('min_value_new', models.PositiveIntegerField(blank=True, null=True, verbose_name='Min value')),
                ('max_value_new', models.PositiveIntegerField(blank=True, null=True, verbose_name='Max value')),
                ('initial_value_new', models.CharField(blank=True, help_text='Default value of field.', max_length=255, verbose_name='Initial value')),
                ('custom_classes_new', models.CharField(blank=True, max_length=255, verbose_name='custom css classes')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='aldryn_forms.fieldplugin')),
            ],
            options={
                'verbose_name': 'field plugin Translation',
                'db_table': 'aldryn_forms_fieldplugin_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatableModel, models.Model),
        ),
        migrations.CreateModel(
            name='EmailFieldPluginTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name_new', models.CharField(blank=True, help_text='Used to set the field name', max_length=255, verbose_name='Name')),
                ('label_new', models.CharField(blank=True, max_length=255, verbose_name='Label')),
                ('required_new', models.BooleanField(default=False, verbose_name='Field is required')),
                ('required_message_new', models.TextField(blank=True, help_text='Error message displayed if the required field is left empty. Default: "This field is required".', null=True, verbose_name='Field required error message')),
                ('placeholder_text_new', models.CharField(blank=True, help_text='Default text in a form. Disappears when user starts typing. Example: "email@example.com"', max_length=255, verbose_name='Placeholder text')),
                ('help_text_new', models.TextField(blank=True, help_text='Explanatory text displayed next to input field. Just like this one.', null=True, verbose_name='Help text')),
                ('attributes_new', djangocms_attributes_field.fields.AttributesField(blank=True, default=dict, verbose_name='Attributes')),
                ('min_value_new', models.PositiveIntegerField(blank=True, null=True, verbose_name='Min value')),
                ('max_value_new', models.PositiveIntegerField(blank=True, null=True, verbose_name='Max value')),
                ('initial_value_new', models.CharField(blank=True, help_text='Default value of field.', max_length=255, verbose_name='Initial value')),
                ('custom_classes_new', models.CharField(blank=True, max_length=255, verbose_name='custom css classes')),
                ('email_send_notification_new', models.BooleanField(default=False, help_text='When checked, the value of this field will be used to send an email notification.', verbose_name='send notification when form is submitted')),
                ('email_subject_new', models.CharField(blank=True, default='', help_text='Used as the email subject when email_send_notification is checked.', max_length=255, verbose_name='email subject')),
                ('email_body_new', models.TextField(blank=True, default='', help_text='Additional body text used when email notifications are active.', verbose_name='Additional email body')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='aldryn_forms.emailfieldplugin')),
            ],
            options={
                'verbose_name': 'email field plugin Translation',
                'db_table': 'aldryn_forms_emailfieldplugin_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatableModel, models.Model),
        ),
    ]
